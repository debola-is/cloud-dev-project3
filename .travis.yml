language: node_js
node_js:
  - 12

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "Build Starts"
  - echo "Installing Dependencies for udagram feed"
  - cd udagram-api-feed && npm install --f && cd ..
  - echo "Installing dependencies for udagram user"
  - cd udagram-api-user && npm install --f && cd ..
  - echo "Installing dependencies for udagram frontend"
  - cd udagram-frontend && npm install --f && cd ..

script:
  - docker --version # print the version for logging
  - docker-compose -f docker-compose-build.yaml build --parallel
  - docker tag udagram-reverseproxy adebola079/udagram-reverseproxy:v1
  - docker tag udagram-api-feed adebola079/udagram-api-feed:v1
  - docker tag udagram-api-user adebola079/udagram-api-user:v1
  - docker tag udagram-frontend adebola079/udagram-frontend:v1

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push adebola079/udagram-reverseproxy:v1
  - docker push adebola079/udagram-api-feed:v1
  - docker push adebola079/udagram-api-user:v1
  - docker push adebola079/udagram-frontend:v1